name: AG Mod X - Full release package

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      platform_folders: agmodx-dev-linux agmodx-dev-windows
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v1

    - name: Download latest AMX Mod X v1.9
      run: |
        wget "https://www.amxmodx.org/latest.php?version=1.9&os=linux&package=base" -O amxx-linux.tar.gz
        wget "https://www.amxmodx.org/latest.php?version=1.9&os=windows&package=base" -O amxx-windows.zip
        mkdir amxx-windows amxx-linux
        tar -xzf amxx-linux.tar.gz -C amxx-linux && unzip amxx-windows.zip -d amxx-windows

    - name: Download Metamod-P v1.21p38
      run: |
        wget "https://github.com/Bots-United/metamod-p/releases/download/v1.21p38/metamod_i686_linux_win32-1.21p38.tar.xz" -O metamod.tar.xz
        mkdir metamod
        tar -xf metamod.tar.xz -C metamod

    - name: Compile plugins
      run: |
        # This dir will contain compiled plugins
        mkdir .plugins

        # Move to the folder where the compiler is located
        cd amxx-linux/addons/amxmodx/scripting
        
        # Add missing native is_user_authorized (amxmodx.inc)
        sed 's/native is_user_hltv(index);/& \nnative is_user_authorized(index);\n/' include/amxmodx.inc -i

        # Give amxxpc the required permissions
        chmod +x amxxpc

        # Compile all plugins inside scripting folder
        for file in $GITHUB_WORKSPACE/valve/addons/amxmodx/scripting/*.sma
        do
          filename="`echo $(basename -s .sma $file)`"
          echo -e "\nCompiling $filename.sma"
          ./amxxpc -i$GITHUB_WORKSPACE/valve/addons/amxmodx/scripting/include $file -o$GITHUB_WORKSPACE/.plugins/$filename.amxx
        done

        # Return to initial location
        cd $GITHUB_WORKSPACE

    - name: Create AG Mod X folder structure
      run: |
        for agmodx_folder in $platform_folders
        do
          mkdir -p $agmodx_folder/valve && cd $_
          mkdir addons ctf dlls gamemodes locs models sound
          cd $GITHUB_WORKSPACE
        done

    - name: Copy AMX Mod X and compiled plugins
      run: |
        # Copy amxmodx addons folder (Windows and linux)
        cp -a amxx-linux/addons/* agmodx-dev-linux/valve/addons
        cp -a amxx-windows/addons/* agmodx-dev-windows/valve/addons

        # Copy compiled plugins
        cp -a .plugins/*.amxx agmodx-dev-linux/valve/addons/amxmodx/plugins
        cp -a .plugins/*.amxx agmodx-dev-windows/valve/addons/amxmodx/plugins

    - name: Copy assets
      run: |
        for agmodx_folder in $platform_folders
        do
          # Copy agmodx plugins list and multilanguage files
          cp valve/addons/amxmodx/data/lang/*.txt $agmodx_folder/valve/addons/amxmodx/data/lang
          cp valve/addons/amxmodx/configs/plugins-agmodx.ini $agmodx_folder/valve/addons/amxmodx/configs

          # Copy the rest of the directories and files from agmodx repo
          toCopy=("ctf" "dlls" "gamemodes" "locs" "models" "sound" "delta.lst" "server.cfg" "startup_server.cfg")
          for tc in "${toCopy[@]}"
          do
            # Directory
            if [[ -d valve/$tc ]]; then
              if [[ $tc == "dlls" && $agmodx_folder == "agmodx-dev-linux" ]]; then
                cp -a valve/$tc/*.so $agmodx_folder/valve/$tc
              elif [[ $tc == "dlls" && $agmodx_folder == "agmodx-dev-windows" ]]; then
                cp -a valve/$tc/*.dll $agmodx_folder/valve/$tc
              else
                cp -a valve/$tc/* $agmodx_folder/valve/$tc
              fi
            # File
            elif [[ -f valve/$tc ]]; then
              cp -a valve/$tc $agmodx_folder/valve
            fi
          done
        done

    - name: Copy and setup Metamod
      run: |
        # Create metamod folder
        mkdir -p agmodx-dev-linux/valve/addons/metamod/dlls
        mkdir -p agmodx-dev-windows/valve/addons/metamod/dlls

        # Copy metamod
        cp metamod/*.so agmodx-dev-linux/valve/addons/metamod/dlls
        cp metamod/*.dll agmodx-dev-windows/valve/addons/metamod/dlls

        # Add amxmodx to metamod plugins
        echo 'linux addons/amxmodx/dlls/amxmodx_mm_i386.so' > agmodx-dev-linux/valve/addons/metamod/plugins.ini
        echo 'win32 addons/amxmodx/dlls/amxmodx_mm.dll' > agmodx-dev-windows/valve/addons/metamod/plugins.ini

        # Create liblist.gam file
        liblist='// Valve Game Info file'
        liblist+='\n// These are key/value pairs.  Certain mods will use different settings.'
        liblist+='\ngame "Half-Life"'
        liblist+='\nstartmap "c0a0"'
        liblist+='\ntrainmap "t0a0"'
        liblist+='\nmpentity "info_player_deathmatch"'
        liblist+='\ngamedll "addons\metamod\dlls\metamod.dll"'
        liblist+='\ngamedll_linux "addons/metamod/dlls/metamod.so"'
        liblist+='\ngamedll_osx "dlls/hl.dylib"'
        liblist+='\nsecure "1"'
        liblist+='\ntype "singleplayer_only"'

        echo -e $liblist > agmodx-dev-linux/valve/liblist.gam
        echo -e $liblist > agmodx-dev-windows/valve/liblist.gam

    - name: Remove unnecessary files
      run: |
        rm -r agmodx-dev-linux/valve/addons/amxmodx/scripting
        rm -r agmodx-dev-windows/valve/addons/amxmodx/scripting

    - name: Upload AG Mod X package for Linux
      uses: actions/upload-artifact@master
      with:
        name: agmodx-dev-linux
        path: agmodx-dev-linux

    # TODO: maybe I should in the name of the artifact the branch and short commit SHA
    # More info: https://stackoverflow.com/questions/58886293/getting-current-branch-and-commit-hash-in-github-action
    - name: Upload AG Mod X package for Windows
      uses: actions/upload-artifact@master
      with:
        name: agmodx-dev-windows
        path: agmodx-dev-windows
